#include "Keyboard.hpp"
#include <Windows.h>

Keys VKeyToKeys(std::uint32_t vKey)
{
    switch (vKey)
    {
    case 0x30:
        return Keys::Num0;
    case 0x31:
        return Keys::Num1;
    case 0x32:
        return Keys::Num2;
    case 0x33:
        return Keys::Num3;
    case 0x34:
        return Keys::Num4;
    case 0x35:
        return Keys::Num5;
    case 0x36:
        return Keys::Num6;
    case 0x37:
        return Keys::Num7;
    case 0x38:
        return Keys::Num8;
    case 0x39:
        return Keys::Num9;

    case VK_NUMPAD0:
        return Keys::NumPad0;
    case VK_NUMPAD1:
        return Keys::NumPad1;
    case VK_NUMPAD2:
        return Keys::NumPad2;
    case VK_NUMPAD3:
        return Keys::NumPad3;
    case VK_NUMPAD4:
        return Keys::NumPad4;
    case VK_NUMPAD5:
        return Keys::NumPad5;
    case VK_NUMPAD6:
        return Keys::NumPad6;
    case VK_NUMPAD7:
        return Keys::NumPad7;
    case VK_NUMPAD8:
        return Keys::NumPad8;
    case VK_NUMPAD9:
        return Keys::NumPad9;


    case 0x41:
        return Keys::A;
    case 0x42:
        return Keys::B;
    case 0x43:
        return Keys::C;
    case 0x44:
        return Keys::D;
    case 0x45:
        return Keys::E;
    case 0x46:
        return Keys::F;
    case 0x47:
        return Keys::G;
    case 0x48:
        return Keys::H;
    case 0x49:
        return Keys::I;
    case 0x4A:
        return Keys::J;
    case 0x4B:
        return Keys::K;
    case 0x4C:
        return Keys::L;
    case 0x4D:
        return Keys::M;
    case 0x4E:
        return Keys::N;
    case 0x4F:
        return Keys::O;
    case 0x50:
        return Keys::P;
    case 0x51:
        return Keys::Q;
    case 0x52:
        return Keys::R;
    case 0x53:
        return Keys::S;
    case 0x54:
        return Keys::T;
    case 0x55:
        return Keys::U;
    case 0x56:
        return Keys::V;
    case 0x57:
        return Keys::W;
    case 0x58:
        return Keys::X;
    case 0x59:
        return Keys::Y;
    case 0x5A:
        return Keys::Z;

    case VK_F1:
        return Keys::F1;
    case VK_F2:
        return Keys::F2;
    case VK_F3:
        return Keys::F3;
    case VK_F4:
        return Keys::F4;
    case VK_F5:
        return Keys::F5;
    case VK_F6:
        return Keys::F6;
    case VK_F7:
        return Keys::F7;
    case VK_F8:
        return Keys::F8;
    case VK_F9:
        return Keys::F9;
    case VK_F10:
        return Keys::F10;
    case VK_F11:
        return Keys::F11;
    case VK_F12:
        return Keys::F12;

    case VK_ESCAPE:
        return Keys::Escape;
    case VK_OEM_3:
        return Keys::Tilde;

    case VK_OEM_MINUS:
        return Keys::MinusUnderscore;
    case VK_OEM_PLUS:
        return Keys::PlusEquals;
    case VK_BACK:
        return Keys::Backspace;
    case VK_OEM_1:
        return Keys::Semicolon;
    case VK_TAB:
        return Keys::Tab;
    case VK_OEM_4:
        return Keys::BracketSquaredLeft;
    case VK_OEM_6:
        return Keys::BracketSquaredRight;
    case VK_RETURN:
        return Keys::Enter;
    case VK_CAPITAL:
        return Keys::CapsLock;
    case VK_OEM_2:
        return Keys::Slash;
    case VK_OEM_5:
        return Keys::Backslash;
    case VK_SHIFT:
        return Keys::Shift;
    case VK_CONTROL:
        return Keys::Ctrl;
    case VK_MENU:
        return Keys::Alt;
    case VK_LWIN:
        return Keys::WinLeft;
    case VK_RWIN:
        return Keys::WinRight;
    case VK_LEFT:
        return Keys::Left;
    case VK_RIGHT:
        return Keys::Right;
    case VK_UP:
        return Keys::Up;
    case VK_DOWN:
        return Keys::Down;
    case VK_INSERT:
        return Keys::Insert;
    case VK_HOME:
        return Keys::Home;
    case VK_END:
        return Keys::End;
    case VK_PRIOR:
        return Keys::PageUp;
    case VK_NEXT:
        return Keys::PageDown;
    default:
        return Keys::END;
    }
}
